■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<87> join(조인) 이 무엇인가?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		▶2개 이상의 테이블로 부터 연관성 있는 [컬럼]을 복사해서 횡으로 붙이는 작업을 말한다.
		▶ 예> 아래 직원번호와 직원명은 employee 테이블 소속이고, 소속부서명은 dept 테이블 소속이다.
				=====================================
					직원번호	직원명	소속부서명
				=====================================
						1		홍길동		총무부.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<88> join(조인) 의 종류
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		=====================================
		inner join
		=====================================
				▶조인 조건에 맞는 행만 포함하는 조인. 대부분 이 조인이 쓰인다.(=내부 조인) 제일 쉽다.
		=====================================
		outer join
		=====================================
				▶조인 조건에 만족하지 못한 행도 출력하는 조인이다. 조금 어렵다. 시험문제 타겟.
		=====================================
		self join
		=====================================
				▶자기 자신의 table과 연결되는 조인이다. 1개의 테이블을 2개 이상으로 보고 하는 조인. 조금 어렵다.
		=====================================
		cross join
		=====================================
				▶2개 이상의 테이블에서 각각의 행이 모두 연결되는 조인이다. 연결 조건이 생략된다.
				▶잘 사용되지 않는 조인이다.

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<89> join(조인)에는 ANSI 조인형식과 오라클형식 조인이 있다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		==========================================================================
		▶ANSI 조인
		==========================================================================
				모든 DB 업체에서 공용으로 사용되는 조인이다.
				조인 조건을 걸때 on 을 쓴다.
		==========================================================================
		▶오라클 조인
		==========================================================================
				오라클에서만 사용되는 조인이다.
				조인 조건을 걸때 where 을 쓴다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<90> 직원번호, 직원명, 소속부서명 검색?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		==========================================================================
		<오라클 inner join>테이블에 별칭을 주지 않고 조인.
		==========================================================================
		select employee.emp_no"직원번호",employee.emp_name"직원명",dept.dep_name"소속부서명"from employee, dept
		where employee.dep_no = dept.dep_no;
		==========================================================================
		<오라클 inner join>테이블에 별칭을 주고 조인.
		==========================================================================
		select e.emp_no"직원번호",e.emp_name"직원명",d.dep_name"소속부서명"from employee e, dept d
		where e.dep_no = d.dep_no;
		==========================================================================
		<ANSI inner join>테이블에 별칭을 주고 조인. ▶ 테이블명 , 구분 > inner join, where > ON
		==========================================================================
		select e.emp_no"직원번호",e.emp_name"직원명",d.dep_name"소속부서명"from employee e inner join dept d
		on e.dep_no = d.dep_no;
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<91> 고객명, 고객전화번호, 담당직원명, 담당직원직급을 출력. <조건>담당직원이 있는 고객만 출력.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		==========================================================================
		<주의>담당직원이 있는 고객만 나와야하므로, 즉 조건에 맞는 행만 나오는 것이므로. inner join 이다.
		==========================================================================
		오라클 조인
		==========================================================================
		select c.cus_name"고객명",c.tel_num"고객전화번호",e.emp_name"담당직원명",e.jikup"담당직원지급"from customer c, employee e
		where	c.emp_no = e.emp_no
		==========================================================================
		ANSI 조인
		==========================================================================
		select c.cus_name"고객명",c.tel_num"고객전화번호",e.emp_name"담당직원명",e.jikup"담당직원지급"from customer c inner join employee e
		on	c.emp_no = e.emp_no
		==========================================================================
		▶입사시험에서 join에서 가능한 테이블의 개수는 몇개입니까? ▶오라클 join 실력과 테이블 개수는 상관없습니다..
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<92> 고객명, 고객전화번호, 담당직원명, 담당직원직급을 출력. <조건>10번부서의 담당직원이 있는 고객만 출력.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select 
				c.cus_name"고객명",
				c.tel_num"고객전화번호",
				e.emp_name"담당직원명",
				e.jikup"담당직원지급"
		from customer c, employee e
		where	c.emp_no = e.emp_no and e.dep_no = 10
==========================================================================
		<주의> 오라클 조인에서 where 절에 조인 조건과 행을 골라내는 조건이 같이 나올수 있다. and로 연결하면 된다.
==========================================================================
ANSI 조인
==========================================================================
		select
				c.cus_name"고객명",
				c.tel_num"고객전화번호",
				e.emp_name"담당직원명",
				e.jikup"담당직원지급"
		from customer c INNER join employee e
		on	c.emp_no = e.emp_no
		WHERE e.dep_no = 10
==========================================================================
		<주의> ANSI 조인에서 on 절에 조인 조건을 쓰고, where 절에 행을 골라내는 조건을 쓰면 된다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<93> 고객명, 고객전화번호, 담당직원명, 담당직원직급을 출력. <조건> 연봉이 3000만원 이상인 담당직원이 있는 고객만 포함.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■		
==========================================================================
오라클 조인
==========================================================================
		select 
				c.cus_name"고객명",
				c.tel_num"고객전화번호",
				e.emp_name"담당직원명",
				e.jikup"담당직원지급"
		from customer c, employee e
		where	c.emp_no = e.emp_no and e.salary >= 3000
==========================================================================
ANSI 조인
==========================================================================
		select 
				c.cus_name"고객명",
				c.tel_num"고객전화번호",
				e.emp_name"담당직원명",
				e.jikup"담당직원지급"
		from customer c inner join employee e
		on	c.emp_no = e.emp_no
		where e.salary >= 3000
==========================================================================
 ▶ outer 조인은 어디 한쪽은 다 나와라 라는 말이 나온다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<94> 직원명, 직원직급,직원부서명, 담당고객명, 고객전화번호, 출력. <조건>직원이름 오름차순 정렬.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■		
==========================================================================
오라클 조인
==========================================================================
		select 
				e.emp_name "직원명",
				e.jikup "직원직급",
				d.dep_name "직원부서명",
				c.cus_name "담당고객명",
				c.tel_num "고객전화번호."
		from employee e,customer c,dept d
		where	e.dep_no = d.dep_no and e.emp_no = c.emp_no
		order by e.emp_name asc
==========================================================================
ANSI 조인
==========================================================================
		select
				e.emp_name "직원명",
				e.jikup "직원직급",
				d.dep_name "직원부서명",
				c.cus_name "담당고객명",
				c.tel_num "고객전화번호."
		from employee e inner join dept d
		on e.dep_no = d.dep_no
		inner join customer c
		on e.emp_no = c.emp_no
		order by e.emp_name asc
==========================================================================
		▶ ANSI 형식의 단점. inner join 할 테이블이 3개 이상부터 쿼리가 너무 길어진다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<95> 직원명, 직원직급,소속부서명, 연봉등급 출력. <조건>연봉등급 오름차순 직급높은순서 오름차순, 나이 높은순서 내림 유지
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■		
==========================================================================
오라클 조인
==========================================================================
		select
				e.emp_name "직원명",
				e.jikup "직원직급",
				d.dep_name "소속부서명",
				sg.sal_grade_no "연봉등급"
		from employee e,dept d, salary_grade sg
		where	(e.dep_no = d.dep_no and (sg.min_salary <= e.salary and sg.MAX_SALARY >= e.salary))
		order by sg.sal_grade_no ASC, 
		decode(e.jikup, '사장',1,'부장',2,'과장',3,'대리',4,'주임',5,6) ASC, 
		case when substr(e.jumin_num, 7,1 ) in('1','2') then '19' else '20' end || substr(e.jumin_num,1,6)
==========================================================================
ANSI 조인
==========================================================================
		select
				e.emp_name "직원명",
				e.jikup "직원직급",
				d.dep_name "소속부서명",
				sg.sal_grade_no "연봉등급"
		from (employee e inner join dept d on e.dep_no = d.dep_no)
		inner join salary_grade sg
		on e.salary between sg.min_salary and sg.max_salary
		order by sg.sal_grade_no ASC, 
		decode(e.jikup, '사장',1,'부장',2,'과장',3,'대리',4,'주임',5,6) ASC, 
		case when substr(e.jumin_num, 7,1 ) in('1','2') then '19' else '20' end || substr(e.jumin_num,1,6)
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<96> 부하직원명, 부하직원직급, 직속상관명, 직속상관직급 출력. <조건> 상관이 있는 직원만 포함.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					e.emp_name "부하직원명",
					e.jikup "부하직원직급",
					e2.emp_name "직속상관명",
					e2.jikup "직속상관직급"
		from
					employee e, employee e2
		where
					e.MGR_EMP_NO = e2.emp_no
==========================================================================
ANSI 조인
==========================================================================
		select
				e.emp_name "부하직원명",
				e.jikup "부하직원직급",
				e2.emp_name "직속상관명",
				e2.jikup "직속상관직급"
		from	
				employee e inner join employee e2
		on
				e.MGR_EMP_NO = e2.emp_no
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<97> 직속상관명, 직속상관직급, 부하직원명, 부하직원직급, 출력. <조건> 상관이 있는 직원만 포함.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					e.emp_name "직속상관명",
					e.jikup "직속상관직급",
					e2.emp_name "부하직원명",
					e2.jikup "부하직원직급"
		from
					employee e, employee e2
		where
					e.emp_no = e2.MGR_EMP_NO
==========================================================================
ANSI 조인
==========================================================================
		select
					e.emp_name "직속상관명",
					e.jikup "직속상관직급",
					e2.emp_name "부하직원명",
					e2.jikup "부하직원직급"
		from
					employee e inner join employee e2
		on
					e.emp_no = e2.MGR_EMP_NO
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<98> 부서명, 직원명, 직원직급, 연봉등급, 직속상관명, 직속상관직급, 담당고객명
			<Inner Join 을 대표하는 문제. 이 문제 집중적으로 보자.>
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					e.emp_name "직원명",
					e.jikup "직원직급",
					d.dep_name "소속부서명",
					s.SAL_GRADE_NO "연봉등급",
					e2.emp_name "직속상관명",
					e2.jikup "직속상관직급",
					c.cus_name "고객명"
		from
					employee e, dept d, salary_grade s, employee e2, customer c
		where
					(e.dep_no = d.dep_no) and (e.salary between s.min_salary and s.max_salary)
					and (e.mgr_emp_no = e2.emp_no) and (c.emp_no = e.emp_no);
==========================================================================
ANSI 조인
==========================================================================
		select
					e.emp_name "직원명",
					e.jikup "직원직급",
					d.dep_name "소속부서명",
					s.sal_grade_no "연봉등급",
					e2.emp_name "직속상관명",
					e2.jikup "직속상관직급",
					c.cus_name "고객명"
		from
					(((employee e inner join dept d
					on	e.dep_no = d.dep_no) inner join salary_grade s
					on	e.salary between s.min_salary and s.max_salary) inner join employee e2
					on	e.mgr_emp_no = e2.emp_no) inner join customer c
					on	c.emp_no = e.emp_no
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<99> 고객명, 고객전화번호, 담당직원명, 담당직원직급 출력. <조건>담당직원이 없는 고객도 포함.(고객은 전부 나와!)
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		<주의>담당직원이 없는 고객도 포함 하라는 얘기는 고객은 다 나오라는 말이다. 즉 outer 조인 하라는 소리.
==========================================================================
		select
					c.cus_name "고객명"
					c.tel_num "고객전화번호"
					e.emp_name "담당직원명"
					e.jikup "담당직원직급"
		from
					customer c, employee e
		where
					c.emp_no = e.emp_no(+);
==========================================================================
ANSI 조인
==========================================================================
		select
					c.cus_name "고객명",
					c.cus_name "고객전화번호",
					c.cus_name "담당직원명",
					c.cus_name "담당직원직급"
		from
					customer c left outer join employee e -> 아래에 설명.
		on
					c.emp_no = e.emp_no(+);
==========================================================================
		▶ c.emp_no = e.emp_no(+) 의미
			(+)가 붙은 컬럼의 반대편 컬럼의 소속 테이블 행은 모두 나오고
			(+)가 붙은 em.emp_no 컬럼의 소속 테이블 행은 조건에 맞는 게 없으면 null이라도 달고 나오라는 뜻.
			c.emp_no = e.emp_no(+)
==========================================================================
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<100> 고객번호, 고객명, 고객전화번호, 담당직원명, 담당직원직급 출력?
		<조건>고객정보는 모두 보이고 직원정보는 10번 부서만 보일것.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인		***************************************************************************************************************************
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.tel_num "고객전화번호",
					e.emp_name "담당직원명",
					e.jikup "담당직원직급"
		from
					customer c, employee e
		where
					c.emp_no = e.emp_no(+) AND e.dep_no(+) = 10;
		==========================================================================
		<주의> outer 조인에서 where 에 (+)가 붙는 놈은 ?
		==========================================================================
				▶다나오는 메인 테이블에 딸려 나오는. 즉, 메인 테이블이 아닌 모든 컬럼에 붙는다.
					심지어 행을 골라내는 조건의 컬럼도 여기에 속한다.
		==========================================================================
		<새끼문제> 만약 e.dep_no(+) = 10 을 e.dep_no = 10 로 수정하면?
		==========================================================================
				담당직원이 10번 부서인 고객만 포함된다.
				마치 inner 조인의 결과 처럼 보인다.
==========================================================================
ANSI 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.tel_num "고객전화번호",
					e.emp_name "담당직원명",
					e.jikup "담당직원직급"
		from
					customer c left outer join employee e
		on
					c.emp_no = e.emp_no AND e.dep_no = 10;
		==========================================================================
		<주의> ANSI조인에서 left outer join 나오면 left outer join 왼쪽에 있는 테이블이 다나오는 테이블이다.
		==========================================================================
		<주의> ANSI조인에서 right outer join 나오면 right outer join 오른쪽에 있는 테이블이 다나오는 테이블이다.
		==========================================================================
		==========================================================================
		<새끼문제> 만약 e.dep_no = 10 을 따로 빼내서 where e.dep_no=10 로 추가하면?
		==========================================================================
			where 절이 있으면 행을 골라내므로 고객이 2/10명밖에 안나온다.
			ANSI 방식의 outer 조인에서는 행을 골라내는 조건도 on절에 들어가야한다.
			만약에 where 절을 쓰게 되면 메인테이블이 다 안나오게 된다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<101> 고객번호, 고객명, 고객전화번호, 담당직원명, 담당직원직급, 담당직원연봉등급 출력
		<조건> 담당직원이 없는 고객도 포함
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.tel_num "고객전화번호",
					e.emp_name "담당직원명",
					e.jikup "담당직원직급",
					s.sal_grade_no"담당직원연봉등급"
		from
					customer c, employee e, salary_grade s
		where
					c.emp_no = e.emp_no(+) AND e.salary between s.min_salary(+) and s.max_salary(+)
		ORDER BY c.cus_no;
		==========================================================================
		<주의> employee 입장에서 메인테이블은 customer 이고, salary_grade 테이블 입장에서는 메인 테이블은 employee이다.
				메인 테이블에 딸려나오는 테이블의 컬럼에 (+)를 붙이면 된다.
		==========================================================================
		<주의>아래 처럼은 안된다. 즉(+) 를 양쪽에 붙일수는 없다.
				s.min_salary(+) <= e.salary(+) and s.max_salary(+) >= e.salary(+)
		==========================================================================
==========================================================================
ANSI 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.tel_num "고객전화번호",
					e.emp_name "담당직원명",
					e.jikup "담당직원직급",
					s.sal_grade_no"담당직원연봉등급"
		from
					(customer c left outer join employee e on c.emp_no = e.emp_no)
					left outer join salary_grade s on e.salary between s.min_salary and s.max_salary
		ORDER BY c.cus_no;
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<102> 고객번호, 고객명, 고객주민번호 출력. 단 연봉이 3000 이상인 담당직원이 담당한 고객이어야한다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.jumin_num "고객주민번호"
		from
					customer c , employee e
		where
					e.salary >= 3000 AND c.emp_no = e.emp_no
==========================================================================
ANSI 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.jumin_num "고객주민번호"
		from
					customer c inner join employee e
		on
					e.salary >= 3000 AND c.emp_no = e.emp_no
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<103> 고객번호, 고객명, 고객주민번호 출력. 단 40살 이상인 담당직원이 담당한 고객이어야한다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.jumin_num "고객주민번호"
		from
					customer c , employee e
		where
					floor(
					to_number(
					sysdate -
					to_date(
					case when
					substr(e.jumin_num,7,1) in('1','2') then '19'
					else '20' end||
					substr(e.jumin_num,1,6), 'yyyy-mm-dd'
					)
					) / 365
					+1) >= 40 AND c.emp_no = e.emp_no
		==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.jumin_num "고객주민번호"
		from
					customer c , employee e
		where
					c.emp_no = e.emp_no
					AND
					(extract(year from sysdate)
					-
					extract(
						year from to_date(
							decode(substr(e.jumin_num,7,1),'1','19','2','19','20')
									|| substr(e.jumin_num,1,6), 'yyyymmdd'
						)
					)+1) >= 40
		▶ extract 구문은 date 형식에서 year 등을 숫자로 뽑아내기위한 함수이다.
		==========================================================================
==========================================================================
ANSI 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					c.jumin_num "고객주민번호"
		from
					customer c inner join employee e
					on floor(
					to_number(
					sysdate -
					to_date(
					case when
					substr(e.jumin_num,7,1) in('1','2') then '19'
					else '20' end||
					substr(e.jumin_num,1,6), 'yyyy-mm-dd'
					)
					) / 365
					+1) >= 40
					 AND c.emp_no = e.emp_no
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<104> 고객번호, 고객명, 담당직원번호, 담당직원명, 담당직원소속부서명, 담당직원연봉등급,
													담당직원직속상관명,담당직원직속상관직급,직속상관연봉등급 출력.
					단, 고객은 다 나와야하고 null은 없음 으로 표시.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
==========================================================================
오라클 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					NVL(c.emp_no ||'','없음') "담당직원번호",
					NVL(e.emp_name ||'','없음') "담당직원명",
					NVL(d.dep_name ||'','없음') "담당직원소속부서명",
					NVL(s.sal_grade_no ||'','없음') "담당직원연봉등급",
					NVL(e2.emp_name||'','없음') "담당직원직속상관명",
					NVL(e2.jikup||'', '없음') "담당직원직속상관직급",
					NVL(s.sal_grade_no||'', '없음') "직속상관연봉등급"
		from
					customer c , employee e, dept d, salary_grade s, employee e2, salary_grade s2
		where
					c.emp_no = e.emp_no(+)
					and e.dep_no = d.dep_no(+)
					and e.salary between s.min_salary(+) and s.max_salary(+)
					and e.mgr_emp_no = e2.emp_no(+)
					and e2.salary between s2.min_salary(+) and s2.max_salary(+)
		ORDER BY
					c.cus_no;
==========================================================================
ANSI 조인
==========================================================================
		select
					c.cus_no "고객번호",
					c.cus_name "고객명",
					NVL(c.emp_no ||'','없음') "담당직원번호",
					NVL(e.emp_name ||'','없음') "담당직원명",
					NVL(d.dep_name ||'','없음') "담당직원소속부서명",
					NVL(s.sal_grade_no ||'','없음') "담당직원연봉등급",
					NVL(e2.emp_name||'','없음') "담당직원직속상관명",
					NVL(e2.jikup||'', '없음') "담당직원직속상관직급",
					NVL(s.sal_grade_no||'', '없음') "직속상관연봉등급"
		from
					((((customer c left outer join employee e on c.emp_no = e.emp_no)
					left outer join dept d on e.dep_no = d.dep_no)
					left outer join salary_grade s on e.salary between s.min_salary and s.max_salary)
					left outer join employee e2 on e.mgr_emp_no = e2.emp_no)
					left outer join salary_grade s2 on e2.salary between s2.min_salary and s2.max_salary
		ORDER BY
					c.cus_no;
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<86> 기타 함수 정리하면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
=============================================================================================================