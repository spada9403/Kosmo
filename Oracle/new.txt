-- min, max, avg , sum, count 함수들을 [그룹함수] 또는 [통계함수] 라고 부르기도 한다.
-- 그룹지어서 연산을 하는 함수이기 때문이다.
-- 그룹함수들은 주로 group by 와 같이 많이 사용된다.

count(컬럼명) 	=> 컬럼안의 null 아닌 데이터의 개수를 리턴.
count(*)		=> 행의 개수를 리턴한다. 쓰는이유: 원래는 null값이 아닌 컬럼을 찾아서 넣어야 하지만 그러기에 불편해서 만듬.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<37> 아래 SQL 구문은 무슨 문제의 답인가?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select count(emp_no) from customer;
		> 담당직원이 있는 고객의 명수.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
담당 직원이 있는 고객의 명수는?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		emp_no 컬럼안의 담당 직원의 직원번호이므로 직원번호이므로 직원번호의 개수는 결국 담당 직원이 있는 고객의 명수가 된다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<38> 고객을 담당하고 있는 직원의 명수는?

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select count(distinct emp_no) from customer
		---------------------------------------------------
		distinct 컬럼명	=> 컬럼 안의 데이터의 중복을 제거.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<39> 직속상관이 있는 직원의 명수는?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select count(mgr_emp_no) from employee
		----------------------------------------------
		<주의> mgr_emp_no 컬럼안의 데이터가 뭔지 먼저 파악. 바로 직속상관의 직원번호이다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<39-1> 부하직원이 있는 직원의 명수.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select count( distinct mgr_emp_no) from employee
		---------------------------------------------------
		distinct 컬럼명	=> 컬럼 안의 데이터의 중복을 제거.
		---------------------------------------------------
		<주의> count 에는 업무적 특징이 숨어 있어 조심히 날려야 한다. 업무적 특징 => 고객 요구사항.
		
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<40> employee 테이블에서 직원번호, 직원명, 생일월-생일일 검색
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no,emp_name,
			substr(jumin_num,3,2) || '-' || substr(jumin_num,5,2)
		from
			employee
		---------------------------------------------------
		substr(컬럼명, 복사할 시작 순서 번호, 복사할 개수)	=> 시작순서부터 복사할 개수 만큼 복사해서 리턴.
																엄청난 사용빈도를 자랑한다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<41> customer 테이블에서 모든 컬럼, 모든 행을 검색해서 출력하면?
			단, 주민번호는 901225-2****** 형태로 출력.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			cus_no, cus_name,tel_num,
			substr(jumin_num,1,6) || '-' || substr(jumin_num,7,1) || '******',
			emp_no
		from
			customer
		------------------------------------------------------------------------------------------------------
		<주의> 모든 행 이란 말이 나오면 where 절이 없다.
		---------------------------------------------------
		substr(컬럼명, 복사할 시작 순서 번호, 복사할 개수)	=> 시작순서부터 복사할 개수 만큼 복사해서 리턴.
																엄청난 사용빈도를 자랑한다.
		------------------------------------------------------------------------------------------------------
		||	=> 좌우의 문자열을 붙이는 연산자. 즉 연결 연산자. 숫자가 나올수도 있다.
		<주의> 오라클에서 + 는 연결 연산자가 아니다. 사칙 연산자 이다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<42> customer 테이블에서 고객번호 고객명 담당직원존재여부 출력
			단 직원 번호가 있으면 그대로 출력., 없으면 '없음' 으로 표시.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		------------------------------------------------------------------------------------------------------
		nvl( 컬럼명, null값일때 대체 데이터)
		------------------------------------------------------------------------------------------------------
				=> 컬럼명 안의 데이터가 null 이 아니면 그냥 리턴하고
										null 이면 null 값일때대체데이터를 리턴하는 [null 처리 내장함수] 이다

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<43> customer 테이블에서 고객번호 고객명 담당직원존재여부 출력
			단 직원 번호가 있으면 '있음', 없으면 '없음' 으로 표시.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		------------------------------------------------------------------------------------------------------
		nvl( 컬럼명, null값이 아닐때 대체 데이터 ,null값일때 대체 데이터)
		------------------------------------------------------------------------------------------------------
				=> 컬럼명 안의 데이터가 null 이 아니면 null값이 아닐때 대체 데이터
										null 이면 null 값일때대체데이터를 리턴하는 [null 처리 내장함수] 이다
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<44> employee 테이블에서 직원번호, 직원명, 직급, 성별 출력.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
case ~ end 구문의 패턴 설명.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		<패턴1> 비교연산자로 치면 = 밖에 사용하지 못한다. 대신 컬럼명을 1번만 쓴다.
				필요에따라 else 리턴값 n은 생략될수 있다.
		case 컬럼명 
			when 데이터1 then 리턴값1
			when 데이터2 then 리턴값2
			when 데이터3 then 리턴값3
			else 리턴값n
		end
		------------------------------------------------------------------------------------------------------
			컬럼명 안의 데이터가 데이터1과 같으면 리턴값1을 리턴.
			컬럼명 안의 데이터가 데이터2과 같으면 리턴값2을 리턴.
			컬럼명 안의 데이터가 데이터3과 같으면 리턴값3을 리턴.
			~
			그 외에는 리턴값n을 리턴.
		------------------------------------------------------------------------------------------------------
		<패턴2> 필요에 따라 >=, <= , >, < , != 등의 비교연산자를 사용할수 있다. 단점으로는 컬러명이 계속 반복된다. = 를 사용할때는 패턴 1이 더 낫다.
		case  
			when 컬럼명 = 데이터1 then 리턴값1
			when 컬럼명 > 데이터2 then 리턴값2
			when 컬럼명 < 데이터3 then 리턴값3
			else 리턴값n
		end
		------------------------------------------------------------------------------------------------------
			컬럼명 안의 데이터가 데이터1과 같으면 리턴값1을 리턴.
			컬럼명 안의 데이터가 데이터2보다 크면 리턴값2을 리턴.
			컬럼명 안의 데이터가 데이터3보다 작으면 리턴값3을 리턴.
			~
			그 외에는 리턴값n을 리턴.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
decode(~) 구문의 패턴 설명.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		decode(
			컬럼명, 
			비교데이터1, 리턴값1, 
			비교데이터2, 리턴값2, 
			비교데이터3, 리턴값3, 
			그외 리턴값n
		)
		------------------------------------------------------------------------------------------------------
			컬럼명 안의 데이터가 데이터1과 같으면 리턴값1을 리턴.
			컬럼명 안의 데이터가 데이터2과 같으면 리턴값2을 리턴.
			컬럼명 안의 데이터가 데이터3과 같으면 리턴값3을 리턴.
			~
			그 외에는 리턴값n을 리턴.
		------------------------------------------------------------------------------------------------------
			필요에 따라 그외 리턴값n을 생략될수 있다.
			decode의 단점으로는 => 같다(=) 비교연산 밖에 사용할수 없다
								=> 오라클에서만 사용되는 오라클 전용함수이다. case~ end 구문은 모든 DB에서 사용이 가능하다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<45> employee 테이블에서 직원번호,직원명, 직급, 출생년도(4자리) 를 출력하면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<46> employee 테이블에서 직원번호,직원명, 직급, 출생년대(4자리) 를 출력하면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
------------------------------------------------------------------------------------------------------
		년도	=>	1년 단위.
		년대	=>	10년 단위.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<47> employee 테이블에서 나이순으로 출력하면? 연장자가 먼저 나오도록.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		------------------------------------------------------------------------------------------------------
		order by 뒤는 정렬 기준 컬럼이 나온다. 정렬 기준 컬럼을 case가 끌어안아서 다른 형태로 바꾼 것.
		------------------------------------------------------------------------------------------------------
		order by 구문의 패턴.
		------------------------------------------------------------------------------------------------------
		order by 컬럼명|컬럼순서번호|컬럼알리아스 asc || desc  -> asc는 생략이 가능하다.
		
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<48> employee 테이블에서 직급순서대로 모든 컬럼 출력.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

		select * from employee
		order by
			decode(
			jikup, 
			'사장', 1, 
			'부장', 2, 
			'과장', 3, 
			'대리', 4, 
			'주임', 5,
			6
			) asc
		------------------------------------------------------------------------------------------------------
		order by 뒤는 정렬 기준 컬럼이 나온다. 정렬 기준 컬럼을 case가 끌어안아서 다른 형태로 바꾼 것.
		------------------------------------------------------------------------------------------------------
		정렬시 사장 = 1, 부장 = 2, 과장 = 3, 대리 = 4로 주임 = 5, 그 외 = 6 보고 오름차순으로 정렬.
		즉 직급을 정수로 바꾸어서 정렬.
		------------------------------------------------------------------------------------------------------
		asc 를 desc 로 바꾸면 직급이 낮은 사람이 제일 먼저 나온다. 즉 6부터 나온다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<49> employee 테이블에서 직원번호, 직원명, 입사일(년-월-일) 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no,
			emp_name,
			to_char(hire_date, 'YYYY-MM-DD HH:MI:SS')
		from
			employee
		------------------------------------------------------------------------------------------------------
		to_char(날짜또는숫자컬럼, '출력시(리턴시) 원하는 문자패턴')
		------------------------------------------------------------------------------------------------------
				지정한 날짜또는숫자 를 원하는 출력문자패턴으로 바꾸어 주는 변환함수의 일종.
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD')
		------------------------------------------------------------------------------------------------------
				hire_date 컬럼안의 데이터를 년-월-일 패턴의 문자열로 바꾸어 리턴.
		------------------------------------------------------------------------------------------------------
		시, 분, 초 까지 출력하면?
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD HHMISS')	=> HH = 시간, MI = 분 SS= 초
		------------------------------------------------------------------------------------------------------
		오전 / 오후 붙이고 싶으면?
		to_char(hire_date, 'YYYY-MM-DD AM HHMISS')	=> AM만 붙여주면 오전/ 오후로 표현해준다.
		------------------------------------------------------------------------------------------------------
		군대식 24시 로 하고싶으면?
		to_char(hire_date, 'YYYY-MM-DD HH24:MI:SS')	=> HH뒤에 24를 붙여준다.
		------------------------------------------------------------------------------------------------------
		요일을 출력하고 싶으면? 요일의 패턴.
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD(DAY) AM HH:MI:SS')	=> 영어 풀 네임
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD(DY) AM HH:MI:SS')	=> 영어 약자
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD(DAY) AM HH:MI:SS', 'NLS_DATE_LANGUAGE = korean')	=> 한국어 풀네임 (월요일, 화요일)
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD(DY) AM HH:MI:SS', 'NLS_DATE_LANGUAGE = korean')	=> 한국어 약자 (월, 화, 수)
		------------------------------------------------------------------------------------------------------
		to_char(hire_date, 'YYYY-MM-DD(DY) AM HH:MI:SS', 'NLS_DATE_LANGUAGE = english')	=> 요일을 영어로 표현.
		------------------------------------------------------------------------------------------------------
		분기를 보고 싶다면?
		to_char(hire_date,'YYYY-MM-DD Q HHMISS')	=> Q를 써주면 분기를 출력해준다.
		------------------------------------------------------------------------------------------------------
		YYYY => 년도 4자리 MM => 월 2자리, DD = 일 2자리.
		AM HH => 오전|오후 2자리(1~12 사이 시간), HH24 => 0~23시 사이의 시간.
		MI => 0~59 분, SS => 0~59초
		DAY => 영문 요일 풀네임
		DY => 영문 요일 약자
		Q => 1~4분기.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<49-1> employee 테이블에서 직원번호, 직원명, 입사일(X년-X월-X일(X요일) X분기 X시X분X초) 검색하면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

		select emp_no,emp_name,
			to_char(hire_date,'YYYY')||'년-'
			|| to_char(hire_date,'MM') || '월-' 
			|| to_char(hire_date,'DD') || '일(' 
			|| to_char(hire_date,'DY') || '요일) ' 
			|| to_char(hire_date,'Q')  || '분기 ' 
			|| to_char(hire_date,'HH') || '시' 
			|| to_char(hire_date,'MI') || '분' 
			|| to_char(hire_date,'SS') || '초'
		from
		------------------------------------------------------------------------------------------------------	
		employee
			select emp_no,emp_name,
			to_char(
			hire_date,
			'YYYY"년"-MM"월"-DD"일"(DY"요일") Q"분기" HH"시"MI"분"SS"초"'
			)
		from
			employee
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<50> employee 테이블에서 직원번호, 직원명, 나이 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no,emp_name,
			to_number(	to_char(sysdate, 'YYYY')	)
			-
			to_number(case substr(jumin_num,7,1) when '1', then '19' when '2' then '19' else '20' end || substr(jumin_num,1,2,))
			+ 1 || '세'	"나이"
		from
			employee
		------------------------------------------------------------------------------------------------------	
		to_number(숫자문자가 들어있는 컬럼명)	=>	컬럼명 안의 숫자 문자를 숫자로 변경하는 변환함수.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<51> employee 테이블에서 직원번호, 직원명, 근무년차 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no, emp_name,
			ceil((sysdate-hire_date)/365) || '년차' "근무년차"
		from
			employee
		------------------------------------------------------------------------------------------------------	
		오라클은 날짜 - 날짜 의 결과값(리턴값)은 날짜 차이만큼의 일수이다.
		------------------------------------------------------------------------------------------------------	
		ceil(~) 	=> 소수 첫째 자리에서 무조건 올림해서 리턴하는 수학 함수의 일종.
		floor(~) 	=> 소수 첫째 자리에서 무조건 내림해서 리턴하는 수학 함수의 일종.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<52> employee 테이블에서 직원번호, 직원명, 연령대 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no,emp_name,
			(to_number(	to_char(sysdate, 'YYYY')	)
			-
			to_number(case substr(jumin_num,7,1) when '1', then '19' when '2' then '19' else '20' end || substr(jumin_num,1,2,))
			+ 1) * 0.1 || '대'	"연령대"
		from
			employee
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<53> employee 테이블에서 직원번호, 직원명, 100일잔치날짜(년-월-일) 검색 출력.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no,emp_name,
			to_char(
				to_date(
					case when substr(jumin_num,7,1) in ('1','2') then '19' else '20' end
							|| substr(jumin_num,1,6), 'YYYYMMDD'
				) + 100, 'YYYY-MM-DD'
			)
		from
			employee
		------------------------------------------------------------------------------------------------------	
		날짜 + 정수 => 날짜에 정수만큼의 일수를 더한 날짜를 리턴
		날짜 - 정수 => 날짜에 정수만큼의 일수를 뺸 날짜를 리턴
		날짜1-날짜2 => 날짜1과 날짜2 까지의 차이를 일수로 리턴. 일수 양수가 날짜1 이 날짜2보다 큰 거다.
		------------------------------------------------------------------------------------------------------	
		날짜1 + 날짜2 => 이런거 없다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<55> employee 테이블에서 직원번호, 직원명, 주민번호, 다가올 생일, 생일까지 남은 수.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
select emp_no,emp_name,jumin_num,
	CASE WHEN TO_DATE(TO_CHAR(SYSDATE,'yyyy')||SUBSTR(jumin_num,3,4),'YYYYMMDD')-SYSDATE < 0
				THEN TO_CHAR(TO_DATE(TO_CHAR(SYSDATE,'yyyy')||SUBSTR(jumin_num,3,4),'YYYYMMDD') +365,'YYYY-MM-DD')
				ELSE TO_CHAR(TO_DATE(TO_CHAR(SYSDATE,'yyyy')||SUBSTR(jumin_num,3,4),'YYYYMMDD'), 'YYYY-MM-DD')
	END "다가올 생일",
	FLOOR(
		CASE WHEN TO_DATE(TO_CHAR(SYSDATE,'yyyy')||SUBSTR(jumin_num,3,4),'YYYYMMDD')-SYSDATE < 0
				THEN  TO_DATE(TO_CHAR(SYSDATE,'yyyy')||SUBSTR(jumin_num,3,4),'YYYYMMDD')-sysdate +365
				ELSE 	TO_DATE(TO_CHAR(SYSDATE,'yyyy')||SUBSTR(jumin_num,3,4),'YYYYMMDD')-sysdate
	END
	) "생일까지 남은 일수"
from
		employee
		ORDER BY "생일까지 남은 일수" ASC -- order by 뒤에 리얼컬럼명 , 순서번호 등이 와야하지만 리얼 컬럼명(변형된컬럼)을 써야 한다면 알리아스를 써줘도 된다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<56> employee 테이블에서 직원번호, 직원명, 직급, 연봉(xxx,xxx,xxx만원) 를 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select
			emp_no"직원번호", emp_name"직원명", jikup"직급",
			to_char(salary, '999,999,999')||'만원' "연봉"
		from
			employee
		------------------------------------------------------------------------------------------------------
		to_char(salary, '999,999,999') => salary 컬럼안의 숫자를 3자리마다 끊어서 ,를 삽입한후 문자로 리턴.
											만약 각 9 자리에 대응하는 숫자가 없으면 화면에 출력이 안된다.
		------------------------------------------------------------------------------------------------------
		to_char(salary, '099,999,999') => salary 컬럼안의 숫자를 3자리마다 끊어서 ,를 삽입한후 문자로 리턴.
											맨앞에 0이 있으면 그 자리가 비면 0이 대체된다. 따라서 나머지도 
											9 이어도 모두 0으로 대체가 된다.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<57> employee 테이블에서 수요일에 태어난 직원을 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		SELECT * FROM employee
		WHERE
		TO_CHAR(
		TO_DATE(
		CASE WHEN 
		SUBSTR(jumin_num,7,1) IN ('1','2') THEN '19' 
		ELSE '20'end||SUBSTR(jumin_num,1,6), 'YYYYMMDD')
		, 'DY'
		) = '수'
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<58> employee 테이블에서 70년대생 남자 직원 검색.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		select * from employee
		where substr(jumin_num, 7,1) = '1' and substr(jumin_num,1,1) = '7'
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<57> 오라클의 자주 사용되는 숫자함수 예.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	------------------------------------------------------------------------------------------------------
	abs( n )
	------------------------------------------------------------------------------------------------------
		-> 숫자 n의 절대값을 반환.
	------------------------------------------------------------------------------------------------------
	floor(n)
	------------------------------------------------------------------------------------------------------
		-> 숫자 n이 정수면 그대로 반환, 실수면 실수보다 작으면서 제일 가까운 정수를 반환.
		-> 좌표계에서 쿵 찍어서 왼쪽 정수값.
	------------------------------------------------------------------------------------------------------
	ceil( n )
	------------------------------------------------------------------------------------------------------
		-> 숫자 n이 정수면 그대로 반환하고, 실수면 실수보다 크면서
			제일 가까운 정수를 반환.
		-> 좌표계에서 쿵 찍어서 오른쪽 정수값
	------------------------------------------------------------------------------------------------------
	round( n, m )
	------------------------------------------------------------------------------------------------------
		-> 숫자 n에서 소수 m+1 자리에서 반올림한 수 리턴
	------------------------------------------------------------------------------------------------------
	trunc( n. m )
	------------------------------------------------------------------------------------------------------
		-> 숫자 n에서 소수 m+1 자리부터 버림.
	------------------------------------------------------------------------------------------------------
	sign( n )
	------------------------------------------------------------------------------------------------------
		-> n > 0 면 1, n < 0 면 -1, n = 0 이면 0을 반환
	------------------------------------------------------------------------------------------------------
	mod( n, m )
	------------------------------------------------------------------------------------------------------
		-> n / m 후 나머지 값을 반환.
	------------------------------------------------------------------------------------------------------
	power( n, m )
	------------------------------------------------------------------------------------------------------
		-> n의 m승을 반환.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<58> 오라클의 자주 사용되는 문자함수 예.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	------------------------------------------------------------------------------------------------------
	chr( n )
	------------------------------------------------------------------------------------------------------
		-> 정수 n을 ascii( 아스키 ) 문자기호로 리턴한다.
	------------------------------------------------------------------------------------------------------
	upper( s )
	------------------------------------------------------------------------------------------------------
		-> 문자열 s를 대문자로 변환시켜 리턴한다.
	------------------------------------------------------------------------------------------------------
	lower( s )
	------------------------------------------------------------------------------------------------------
		-> 문자열 s를 소문자로 변환시켜 리턴한다.
	------------------------------------------------------------------------------------------------------
	length( s )
	------------------------------------------------------------------------------------------------------
		-> 문자열 s의 길이를 리턴한다.
	------------------------------------------------------------------------------------------------------
	substr( s, n1, n2 )
	------------------------------------------------------------------------------------------------------
		-> 문자열 s에서 n1번째 자리부터 n2개 까지의 문자를 리턴한다.
		-> n2 생략 시 마지막 까지 문자를 리턴한다.
		-> n1 이 0일 경우 1로 바꿔 실행된다.
		-> 자리수는 n1>0 경우 왼쪽부터, n1<0 경우 오른쪽부터 샘한다.
	------------------------------------------------------------------------------------------------------
		select substr( 'You are not alone', 9, 3 ) from dual;
		select substr( 'You are not alone', 0, 5 ) from dual;
		select substr( 'You are not alone', 5 ) from dual;
		select substr( 'You are not alone', -5, 2 ) from dual;
		select substr( 'You are not alone', 5, 0 ) from dual;
	------------------------------------------------------------------------------------------------------
	trim( s )
	------------------------------------------------------------------------------------------------------
		-> 문자열 s의 맨좌우측의 공백을 제거하여 리턴한다.
			제거 후 또 있으면 계속 제거 후 리턴한다.
	