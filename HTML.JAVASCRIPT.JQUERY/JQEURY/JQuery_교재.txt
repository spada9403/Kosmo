
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<1> JQuery 가 모조?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	----------------------------------------------------------
	●공개적으로 개발되고 무료로 제공되는 [자바스크립트 사용자 정의 객체]의 이름이다.
	----------------------------------------------------------
	<주의>프로그램 언어의 한 종류가 절대 아니다.
	<참고>누구나 버그 수정，성능 향상 그리고 도움말 작성에 참여할 수 있다.
	<참고>http://plugins.jquery.com/ 에 광범위한 라이브러리(~.js)가 있으며, 꾸준히 업데이트되고 있고 
	        누구나 버그 수정，성능향상, 도움말 작성에 참여할 수 있다.

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<2> JQuery 의 장점
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	----------------------------------------------------------
	●디자이너, 퍼블리셔, 개발자 모두가 사용하기 편하고 강력한 기능을 가진 메소드를 제공한다.
	----------------------------------------------------------
	●대부분의 브라우저에서 JQuery 객체의 메소드를 호출하면 동일한 실행 결과를 생산한다. (=cross browsing)
	  즉 브라우저에 따라 다른 코딩을 할 필요가 없다. 
	  기존 자스 코딩은 브라우저에 따라 다른 결과를 산출하는 어려움이 있었다.
	----------------------------------------------------------
	<참고>한번의 코딩으로 모든 브라우저에서 같은 실행결과를 산출하는 것을 크로스 크라우징(=cross browsing) 이라고 한다.
	      개발자가 제일 싫어하는 작업 중의 하나이다.
	----------------------------------------------------------


■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<3> JQuery 객체의 메소드를 사용하기 위한 사전 작업은 뭠까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	----------------------------------------------------------
	●jquery-x.x.x.min.js 다운 받고 HTML의 head 태그에 아래와 같이 수입하는 코드를 작성한다. x 는 임의의 버전 번호이다.
	----------------------------------------------------------
		<script src="query-1.6.2.min.js" type="text/javascript"></script>
	----------------------------------------------------------
	jquery-x.x.x.min.js  파일 안에는 JQuery 객체의 메위주를 리턴하는 jQuery 함수 또는 $ 함수가 존재하고
	JQuery 객체의 메소드나 속성변수가 선언되어 있다.
	----------------------------------------------------------
	
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<4> JQuery 객체의 메위주를 얻을려면 어떻게 합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	----------------------------------------------------------
	jQuery("선택자") 함수 또는 $("선택자") 함수를 호출하여 얻는다.
	----------------------------------------------------------
	jQuery("선택자") 함수 또는 $("선택자") 함수는 jquery-x.x.x.min.js  파일 안에 존재한다.
	----------------------------------------------------------
	<참고>JQuery 객체의 메위주를 얻어야 JQuery 객체의 메소드를 호출할 수 있다.

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<5> JQuery 객체의 메위주를 얻고 메소드를 호출하는 형식을 보여 줍쇼?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
		-------------------------------------
		var xxx = $("선택자");        //  $("선택자") 함수를 호출하여 얻은 JQuery 객체의 메위주를 변수 xxx에 저장하기
		-------------------------------------
		xxx.JQuery객체메소드명(~)     // JQuery 객체의 메소드 호출
		-------------------------------------
		xxx.JQuery객체속성변수명      // JQuery 객체의 속성변수 호출
		-------------------------------------

■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<6> jQuery("선택자") 함수 또는 $("선택자") 함수 호출 시 도대체 선택자가 뭠까? ***
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	----------------------------------------------------------
	선택자(=selector)는 태그를 지칭 하는 방법론을 말한다.
	----------------------------------------------------------
	JQuery 객체는 태그를 관리하는 객체이므로 태그를 지칭하는 방법론이 여러 가지가 있다.
	----------------------------------------------------------
	<예> var obj = $("[name=uid]"); 
	----------------------------------------------------------
		<1> 변수 obj 선언.
		<2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
		   이때 JQuery 객체는 name=uid 를 가진 태그를 관리한다.
		   속성이름 = 속성값 에서 속성값에 공백이 없다면 싱글쿼터를 생략해도 된다.
		   하지만 공백이 있다면 무조건 싱글쿼터 넣어줘야한다.
	----------------------------------------------------------
	<예> var obj = $(".pwd"); 
	----------------------------------------------------------
		<1> 변수 obj 선언.
		<2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
		   이때 JQuery 객체는 class=pwd 를 가진 태그를 관리한다.

	----------------------------------------------------------
	<예> var obj = $("#addr");     
	---------------------------------------------------------- 
		<1> 변수 obj 선언.
		<2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
		   이때 JQuery 객체는 id=addr 를 가진 태그를 관리한다.
	----------------------------------------------------------
	<예> var obj = $(".family .relation"); 
	---------------------------------------------------------- 
		<1> 변수 obj 선언.
		<2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
		   이때 JQuery 객체는 class=family 를 가진 태그 후손 즉 내부에
		                      class=relation 가진 태그 관리한다.
				----------------------------------------------
				<div class=family>
					<span class=relation>얀센 접종자 이성우</span>
				</div>
				<div class=employee>
					<span class=relation>얀센 접종자 최현준</span>
				</div>
				----------------------------------------------
	----------------------------------------------------------
	<예> var obj = $("div"); 
	---------------------------------------------------------- 
		<1> 변수 obj 선언.
		<2> $ 함수를 호출하여 JQuery 객체의 메위주를 얻어 변수 obj 저장.
		   이때 JQuery 객체는 div 태그를 관리한다.
		   만약 div 태그가 2개 이상이면 정말 2개 이상을 관리한다.



■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<7> body 태그 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드가 있다.
	JQuery 를 이용한다면 어떻게 코딩해야합니까?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	---------------------------------------------------------- 
	$(document).ready(
		function () {
			body 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드.
		}
	)
	---------------------------------------------------------- 
	위 아래모두 같은 코딩이지만 현업에서는 코드 줄을 줄이기 위해 아래와 같이 사용한다.
	---------------------------------------------------------- 
	$(document).ready(function () {
			body 안의 모든 태그를 읽어들인 이후 실행하고 싶은 코드.
	})
	---------------------------------------------------------- 
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<8> <input type="button" value="로그인" class = "login_btn"/> 태그가 실행된 결과물인 버튼을 클릭하면 checkForm() 함수 호출하고 싶으면?
						즉 => click 이벤트를 걸려면?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	$(".login_btn").click(function () {
		checkForm();
	})
	----------------------------------------------------------
	click( 익명함수 )	=>	JQuery 객체가 관리하는 태그에 클릭 이벤트가 발생하면 익명함수 안의 코딩을 실행하라.
	----------------------------------------------------------
	선택자가 가르키는 태그에 클릭 이벤트가 발생하면 실행구문 을 실행하기
	----------------------------------------------------------
	$("선택자").click(function () {
		실행구문.
	})
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<9> 아래 html 태그의 실행 결과에서 웹브라우저에 문자열 입력양식이 출력된다.
	웹브라우저에서 아이디를 입력한 경우 입력된 아이디를 얻기 위한 JQuery 차원 코딩은?
						<form name="loginForm">
							<input type="text" name="uid" class="uid" size=10/>
						</form>
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	----------------------------------------------------------
	정답1
	----------------------------------------------------------
		var uid $(".uid").val();
	----------------------------------------------------------
	정답2
	----------------------------------------------------------
		var uid = $("[name='uid']").val();
	----------------------------------------------------------
	정답3
	----------------------------------------------------------
		var uid = $("[name=loginForm] .uid").val()
	----------------------------------------------------------
	정답4
	----------------------------------------------------------
		var uid = $("[name=loginForm] [name='uid']").val();
	----------------------------------------------------------
	<주의> $("[name=loginForm] .uid")에서 공백은 후손을 의미한다.
	----------------------------------------------------------
	<참고> 될 수 있는 데로 정답1 또는 정답3 을 사용하자. css 사용시 유리하기 때문이다.	=>	정답3 권장함.
	<참고> 선택자는 주로 class 값을 많이 사용한다. 여러 이점이 많다.
	----------------------------------------------------------

	val()	=>	JQuery 객체가 관리하는 태그의 value 값을 리턴하는 메소드.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<10> $(".xxx").val()	와		$(".xxx").val("")의 차이점.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	$(".xxx").val()	=>	selector가 가져온 class="xxx"을 가지고 있는 태그의 value 값을 가져 오라는 뜻.
	$(".xxx").val("")	=>	selector가 가져온 class="xxx"을 가지고 있는 태그의 value 값을 "" 으로 세팅하라는 뜻.
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<11> JQeury 객체에서 선택자의 종류?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	$(".xxx");
		class = "xxx"를 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기.
	$("#xxx");
		id="xxx" 가진 태그를 관리하는 JQuery 객체 메위주 리턴.
	$("태그명");
		<태그명></태그명> 태그 관리하는 JQuery 객체 메위주 리턴.
	$("*")
		모든 태그를 관리하는 JQuery 객체 리턴.
		예>		<form name="memRegForm">
					<input type="text" name="mem_id"  class="mem_id">
					<input type="text" name="mem_name" class="mem_name" >
					<input type="password" name="pwd"  class="pwd">
					<select name="addr" class="addr">
						<option value=" ">--선택요망--</option>
						<option value="서울">서울</option>
						<option value="경기">경기</option>
						<option value="인천">인천</option>
						<option value="기타">기타</option>
					</select>
			</form>
			-----------------------------------------------
			$("[name='memRegForm'] *")    
			-----------------------------------------------
				name="memRegForm" 가진 태그의 모든 후손 태그를 관리하는 JQuery 객체 리턴.

	$(".xxx:checked")
		class = "xxx"를 가진 태그중에 체크된 태그를 관리하는 JQuery 객체 메위주 리턴하기.
		체크된 태그는 주로 .radio 또는 checkbox 입력양식이다.
	$("선택자1 선택자2")
		선택자1 이 가르키는 태그의 후손 중에 선택자2가 가르키는 태그를 관리하는 JQUery 객체 메위주 리턴하기
			예) $(".xxx :checked")
					class="xxx" 가진 태그의 후손 중에 체크된 태그를 관리하는 JQuery 객체 메위주 리턴하기.
	$("[태그 속성명 = '속성값']")
		태그속성명 = '속성값' 을 가진 태그를 관리하는 JQuery 객체 메위주 리턴.
		<주의> [와]가 있어야한다.
		예>	$("[name='mem_id']")
			name = "mem_id" 가진 태그를 관리하는 JQuery 객체 메위주 리턴하기
		예>	$("[type='radio']")
			type = 'radio' 가진 태그, 즉 radio 입력양식 태그를 관리하는 JQuery 객체 메위주 리턴하기.
	$("[태그 속성명 != '속성값']")
		태그속성명='속성값' 을 안 가진 태그를 관리하는 JQuery 객체 메위주 리턴.
	$("[태그 속성명 ^= '속성값']")
		예> $("[name^='mem_']")
			name 속성값이 mem_문자로 시작하는 태그를 관리하는 JQuery 객체 메위주 리턴하기.
	$("[태그 속성명 $= '속성값']")
		예> $("[name$='mem_']")
			name 속성값이 mem_문자로 끝 태그를 관리하는 JQuery 객체 메위주 리턴하기.
	$("[태그 속성명 *= '속성값']")
		예> $("[name*='mem_']")
			name 속성값이 mem_문자를 포함하는 태그를 관리하는 JQuery 객체 리턴.
	$("선택자:first")
		선택자가 가리키는 태그 중 첫 번째 태그를 관리하는 JQuery 객체 리턴.
		예> $(".gender:first")
			class = 'gender' 가진 태그 중에 첫번째 태그를 관리하는 JQuery 객체 메위주 리턴.
	$("선택자:last")
		선택자가 가리키는 태그 중 마지막 태그를 관리하는 JQuery 객체 리턴.
		예> $(".gender:last")
			class = 'gender' 가진 태그 중에 마지막 태그를 관리하는 JQuery 객체 메위주 리턴.
	$("선택자:odd")
		선택자가 가리키는 태그 중 인덱스 번호가 홀수인 태그를 관리하는 JQuery 객체 리턴.
		예> $(".hobby:odd")
			<input type="checkbox" name="hobby" class="hobby" value="운동" />운동 
			<input type="checkbox" name="hobby" class="hobby" value="여행" />여행
            <input type="checkbox" name="hobby" class="hobby" value="독서" />독서 
			<input type="checkbox" name="hobby" class="hobby" value="영화감상" />영화감상
			<input type="checkbox" name="hobby" class="hobby" value="기타" />기타
			class='hobby' 가진 태그 중에 인덱스 번호가 홀수인 태그를 관리하는 JQuery 객체 메위주 리턴하기.
			즉 여행과 기타 이다.
	$("선택자:even")
		선택자가 가리키는 태그 중 인덱스 번호가 짝수인 태그를 관리하는 JQuery 객체 리턴.
		예> $(".hobby:even")
			<input type="checkbox" name="hobby" class="hobby" value="운동" />운동 
			<input type="checkbox" name="hobby" class="hobby" value="여행" />여행
            <input type="checkbox" name="hobby" class="hobby" value="독서" />독서 
			<input type="checkbox" name="hobby" class="hobby" value="영화감상" />영화감상
			<input type="checkbox" name="hobby" class="hobby" value="기타" />기타
			class='hobby' 가진 태그 중에 인덱스 번호가 짝수인 태그를 관리하는 JQuery 객체 메위주 리턴하기.
			즉 운동,독서,기타 이다.
	$("선택자:eq(i)")
		선택자가 가리키는 태그 중에 인덱스 번호가 i번째인 태그를 관리하는 JQuery 객체 리턴.
		i는 0부터 시작하는 인덱스 번호가 들어간다.
	$("선택자:first-child")
		선택자가 가리키는 태그 중 각 태그의 부모입장에서 [첫번째] 자식에 해당하는 태그를 관리하는 JQuery 객체 리턴.
		예>
			<table class="student">
				<tr>
					<td>사오정</td>
					<td>대리</td>
					<td>111111</td>
				</tr>
				<tr>
					<td>저팔계</td>
					<td>과장</td>
					<td>222222</td>
				</tr>
			</table>
	$(".student td:first-child")
		class=student 를 가진 태그의 후손 중에 td를 골라내라
		그리고 그 td 중에 각 td 의 부모 입장에서 첫째 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
		결국 <td>사오정</td>  와 <td>저팔계</td> 태그를 관리하는 JQuery 객체 리턴된다..
	$(".student td:last-child")
		class=student 를 가진 태그의 후손 중에 td를 골라내라
		그리고 그 td 중에 각 td 의 부모 입장에서 마지막 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
		결국 <td>사오정</td>  와 <td>저팔계</td> 태그를 관리하는 JQuery 객체 리턴된다..
		<<nth란 : 몇번째인지도 모를 이라는 의미를 가지고 있다.>>
	$(".student td:nth-child(n)")
		class=student 를 가진 태그의 후손 중에 td를 골라내라
		그리고 그 td 중에 각 td 의 부모 입장에서 n번째 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
		if n = 2 라면 대리 와 과장 태그를 관리하는 JQuery 객체 리턴한다.
	$(".student td:nth-child(odd)")
	$(".student td:nth-child(even)")
		class=student 를 가진 태그의 후손 중에 td를 골라내라
		그리고 그 td 중에 각 td 의 부모 입장에서 홀수 / 짝수 번째 자식에 해당하는 td 를 관리하는 JQuery 객체 리턴.
	$(".student td:gt(2)")
		class=student 를 가진 태그의 후손 중에 td를 골라내라
		순서번호가 2번째 놈 이후 해당하는 td를 관리하는 JQuery 객체 리턴.
	$(".student td:lt(2)")
		class=student 를 가진 태그의 후손 중에 td를 골라내라
		순서번호가 2번째 놈 이전 해당하는 td를 관리하는 JQuery 객체 리턴.
	$("선택자1:has(선택자2)")
		선택자1이 가르키는 태그 중 후손으로 선택자 2를 가진 선택자 1을 관리하는 JQuery 객체 리턴
	$("선택자1:contains('문자열')")
		선택자1이 가르키는 태그 중 후손으로 문자열을 가진 내포하고 있는 태그를 관리하는 JQuery 객체 리턴.
	$("선택자1:not(선택자2)")
		선택자1이 가르키는 태그 중 선택자2 가 가르키는 태그가 아닌 태그를 관리하는 JQuery 객체 리턴.
	$(":text")
		type = "text"를 가진 태그들을 관리하는 JQuery 객체 리턴.
		$("[type='text']") 와 동일하다. 다른 type들도 사용 가능.
	$(":disabled")
		비활성화된 태그들을 관리하는 JQuery 객체 리턴
	$(":enabled")
		활성화된 태그들을 관리하는 JQuery 객체 리턴
	$(":visible")
		웹 화면에 보이는 태그들을 관리하는 JQuery 객체 리턴
	$(":hidden")
		웹 화면에 안 보이는 태그들을 관리하는 JQuery 객체 리턴
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
<12> JQuery 객체의 메소드의 종류?
■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	*********************************************
	add( "선택자" )
	*********************************************
		현재 JQuery 객체가 관리하는 태그에 [선택자]가 가리키는 태그도 포함하여 관리하는 JQuery 객체 반환.
		즉 [선택자1]이 가리키는 태그와  [선택자2]가 가리키는 태그를 관리하는 JQuery 객체 반환.
		-----------------------------------------------------
		<예>
		-----------------------------------------------------
		<input type="text" name="mem_name" class="mem_name" >
		<input type="text" name="mem_id"  class="mem_id">
		-----------------------------------------------------
			-----------------------------------------------------
			var obj = $(".mem_name").add( ".mem_id" )
			-----------------------------------------------------
				obj에는 [선택자1]이 가리키는 태그와  [선택자2]가 가리키는 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
				위 코드는 아래 처럼도 가능하다
				----------------------------------
				var obj = $(".mem_name,.mem_id" )
				----------------------------------
	*********************************************
	children( "선택자2" )
	*********************************************
		현재 JQuery 객체가 관리하는 태그의 자식 태그를 관리하는 JQuery 객체 반환.
		-----------------------------------------------------
		<예>
		-----------------------------------------------------
		<div class="member">
			<input type="text" name="mem_name" class="mem_name" >
			<div class="family">
				<input type="text" name="chile_name" class="chile_name" >
			<div>
		<div>
		-----------------------------------------------------
			-----------------------------------------------------
			var obj = $(".member").children("chile_name")
			-----------------------------------------------------
				obj에는 class=member 이 가리키는 태그의 자식 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
				즉 <input type="text" name="chile_name" class="chile_name" > 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
	*********************************************
	parent( )
	*********************************************
		현재 JQuery 객체가 관리하는 태그의 부모 태그를 관리하는 JQuery 객체 반환.
		-----------------------------------------------------
		<예>
		-----------------------------------------------------
		<div class="member">
			<input type="text" name="mem_name" class="mem_name" >
			<div class="family">
				<input type="text" name="chile_name" class="chile_name" >
			<div>
		<div>
		-----------------------------------------------------
			-----------------------------------------------------
			var obj = $(".mem_name").parent( )
			-----------------------------------------------------
				obj에는 class=mem_name 이 가리키는 태그의 부모 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
				즉 <div class="member"> 태그를 관리하는 JQuery 객체의 메위주가 저장된다.
	*********************************************
	parents( "선택자2" )
	*********************************************
		현재 JQuery 객체가 관리하는 태그의 조상 태그 중에 선택자2 가 가르키는 태그 중 제일 가까운 태그를 관리하는 JQuery 객체 반환.
		-----------------------------------------------------
		<예>
		-----------------------------------------------------
		<div class="aaa">
			<div class="xxx">
				<input type="text" name="mem_name" class="mem_name" >
				<span>
					<input type="text" name="child_name" class="child_name" >
				</span>
			<div>
		<div>
		-----------------------------------------------------
			-----------------------------------------------------
			var obj = $(".child_name").parents("div")
			-----------------------------------------------------
				obj에는 class=child_name 이 가리키는 태그의 조상 태그 중 제일 가까운 div 태그를 관리하는 
				JQuery 객체의 메위주가 저장된다.
	*********************************************
	filter( "선택자2" )
	*********************************************
		현재 JQuery 객체가 관리하는 태그 중에 선택자2 가 가르키는 태그를 관리하는 JQuery 객체 반환.
				결국 <div class="xxx"> 태그를 관리하는  JQuery 객체의 메위주가 저장된다.
	*********************************************
	find( "선택자2" )
	*********************************************
		현재 JQuery 객체가 관리하는 태그의 후손중에 선택자2 가 가르키는 태그를 관리하는 JQuery 객체 반환.
	*********************************************
	first()
	*********************************************
		현재 JQuery 객체가 관리하는 태그중에 첫번째 태그를 관리하는 JQuery 객체 반환.
	*********************************************
	last()
	*********************************************
		현재 JQuery 객체가 관리하는 태그중에 마지막 태그를 관리하는 JQuery 객체 반환.




